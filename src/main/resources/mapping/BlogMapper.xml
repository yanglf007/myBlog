<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yanglf.usermanage.dao.BlogMapper">
  <resultMap id="BaseResultMap" type="com.yanglf.usermanage.domain.Blog">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="comments" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="likes" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="reading" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="summary" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="title" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.yanglf.usermanage.domain.BlogWithBLOBs">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="comments" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="likes" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="reading" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="summary" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="title" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="content" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
      <arg column="html_content" javaType="java.lang.String" jdbcType="LONGVARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, comments, create_time, likes, reading, summary, title, user_id
  </sql>
  <sql id="Blob_Column_List">
    content, html_content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from blog
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert"  useGeneratedKeys="true" keyProperty="id"
          parameterType="com.yanglf.usermanage.domain.BlogWithBLOBs">
    insert into blog ( comments, create_time,
      likes, reading, summary, 
      title, user_id, content, 
      html_content)
    values (#{comments,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP},
      #{likes,jdbcType=BIGINT}, #{reading,jdbcType=BIGINT}, #{summary,jdbcType=VARCHAR}, 
      #{title,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR}, 
      #{htmlContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective"  useGeneratedKeys="true" keyProperty="id"
          parameterType="com.yanglf.usermanage.domain.BlogWithBLOBs">
    insert into blog
    <trim prefix="(" suffix=")" suffixOverrides=",">

      <if test="comments != null">
        comments,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="likes != null">
        likes,
      </if>
      <if test="reading != null">
        reading,
      </if>
      <if test="summary != null">
        summary,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="htmlContent != null">
        html_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">

      <if test="comments != null">
        #{comments,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="likes != null">
        #{likes,jdbcType=BIGINT},
      </if>
      <if test="reading != null">
        #{reading,jdbcType=BIGINT},
      </if>
      <if test="summary != null">
        #{summary,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="htmlContent != null">
        #{htmlContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yanglf.usermanage.domain.BlogWithBLOBs">
    update blog
    <set>
      <if test="comments != null">
        comments = #{comments,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="likes != null">
        likes = #{likes,jdbcType=BIGINT},
      </if>
      <if test="reading != null">
        reading = #{reading,jdbcType=BIGINT},
      </if>
      <if test="summary != null">
        summary = #{summary,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="htmlContent != null">
        html_content = #{htmlContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.yanglf.usermanage.domain.BlogWithBLOBs">
    update blog
    set comments = #{comments,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      likes = #{likes,jdbcType=BIGINT},
      reading = #{reading,jdbcType=BIGINT},
      summary = #{summary,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR},
      html_content = #{htmlContent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yanglf.usermanage.domain.Blog">
    update blog
    set comments = #{comments,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      likes = #{likes,jdbcType=BIGINT},
      reading = #{reading,jdbcType=BIGINT},
      summary = #{summary,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>